class Solution {
private:
    unordered_map<char, string> hash = {{'2',"abc"},{'3',"def"},{'4',"ghi"},{'5',"jkl"},{'6',"mno"},{'7',"pqrs"},{'8',"tuv"},{'9',"wxyz"}};
    vector<string> result;
    string input;
public:
    
    void combineHelper(int index, string path){     
        if (index == input.size()){
            result.push_back(path);
            return;
        }
        for (auto& character : hash[input[index]]) {// string
            path.push_back(character);
            combineHelper(index + 1, path);
            path.pop_back();
        }
    }
    
    vector<string> letterCombinations(string digits) {
        if (digits.empty()){
            return {};
        }
        
        input = digits;
        combineHelper(0, "");
        return result;
    }
};
