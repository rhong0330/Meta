class SparseVector {
unordered_map<int,int> hash; //index, value
public:
    
    SparseVector(vector<int> &nums) {
        for (int i = 0; i < nums.size(); i++){
            if (nums[i]) {
                hash[i] = nums[i];
            }
        }
    }
    
    // Return the dotProduct of two sparse vectors
    int dotProduct(SparseVector& vec) {
        int result = 0;
        for(auto& item : vec.hash){
            if(hash.find(item.first) != hash.end()){
                result += item.second * hash[item.first];
            }
        }
        return result;
    }
};

// Your SparseVector object will be instantiated and called as such:
// SparseVector v1(nums1);
// SparseVector v2(nums2);
// int ans = v1.dotProduct(v2);
