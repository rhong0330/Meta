/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    
private:
    vector<int> checker; //level, largestValue
public:
    
    void insertChecker(TreeNode* root, int level){
        if (root != nullptr){
            if (level >= checker.size()){
                checker.push_back(root->val);
            } else {
                checker[level] = max(checker[level], root->val);
            }
            insertChecker(root->left, level+1);
            insertChecker(root->right, level+1); 
        }
    }
    
    vector<int> largestValues(TreeNode* root) {
        insertChecker(root, 0);
        return checker;
    }
};
